- name: Find alerts
  stat:
    path: "{{ zuul_work_dir }}/alerts.csv"
  register: p

- when:
    - p.stat.exists
    - alerta is defined
  block:
    - name: Read alerts from alerts.csv
      read_csv:
        path: "{{ p.stat.path }}"
        fieldnames: severity,env,service,resource,event,value
        delimiter: ';'
      register: alerts

    - name: Send alert
      uri:
        url: "{{ alerta.url }}/api/alert"
        headers:
          Authorization: "Key {{ alerta.token }}"
        method: POST
        body_format: json
        body:
          environment: "{{ zj_alert_item.env | default('Production') }}"
          severity: "{{ zj_alert_item.severity | default('major') }}"
          event: "{{ zj_alert_item.event }}"
          origin: "Zuul"
          resource: "{{ zj_alert_item.resource }}"
          value: "{{ zj_alert_item.value | default(omit) }}"
          service: "{{ zj_alert_item.service.split('_') }}"
          attributes:
            logUrl:
              "{{ alerta.logUrl_host }}/t/{{ zuul.tenant }}/build/{{ zuul.build }}"
      loop: "{{ alerts.list }}"
      loop_control:
        loop_var: zj_alert_item
      no_log: true
      failed_when: false

    - name: Delete alerts file
      file:
        path: "{{ p.stat.path }}"
        state: "absent"
