---
- name: Slurp runtime file
  ansible.builtin.slurp:
    src: "{{ zuul_examples_dir }}/runtime.yaml"
  register: runtime

- name: Get runtime
  set_fact:
    runtime_list: "{{ runtime.content | b64decode | from_yaml }}"

- name: Initialize terraform
  ansible.builtin.command: "{{ terraform_executable }} init -no-color -input=false"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Terraform plan.out
  ansible.builtin.command: "{{ terraform_executable }} plan -out plan.out"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  environment:
    "{{ viz_env | default(omit) }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Convert plan to json
  include_tasks: jsonify.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Install npm
  ansible.builtin.package:
    name:
      - npm
    state: present
  become: yes

- name: Install terraform-visual/cli
  ansible.builtin.command: "npm install -g @terraform-visual/cli"
  become: yes

- name: Terraform make visualization
  ansible.builtin.command: "terraform-visual --plan plan.json"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item
  no_log: true

- name: Process links in main index.html
  include_tasks: links.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: "Install necessary packages for obtain temporary ak/sk"
  ansible.builtin.pip:
    name:
      - requests
      - openstacksdk

- name: Get temporary ak sk for 900 seconds
  os_temp_aksk:
    cloud: functest_cloud
  register: aksk

- name: Initialize terraform for upload main page
  ansible.builtin.command: "{{ terraform_executable }} init -no-color -input=false -backend-config='bucket={{ backend_bucket }}' -backend-config='key=main' -backend-config='region={{ backend_region }}'"
  args:
    chdir: "{{ zuul_examples_dir }}/modules/obs_upload"
  environment:
    AWS_ACCESS_KEY_ID: "{{ aksk.credential.access }}"
    AWS_SECRET_ACCESS_KEY: "{{ aksk.credential.secret }}"
    AWS_SESSION_TOKEN: "{{ aksk.credential.security_token }}"

- name: Recursively find main page files
  ansible.builtin.find:
    paths: "/tmp/main_page/"
    recurse: yes
  register: found

- name: Get files
  set_fact:
    main_page: "{{ found.files | map(attribute='path') | join(',') }}"

- name: Terraform main page files to obs
  ansible.builtin.command: "{{ terraform_executable }} apply -auto-approve -var='bucket={{ bucket_name }}' -var='index_files={{ main_page }}'"
  args:
    chdir: "{{ zuul_examples_dir }}/modules/obs_upload"
  environment:
    OS_CLOUD: functest_cloud

- name: Upload visualize files
  include_tasks: upload.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item
