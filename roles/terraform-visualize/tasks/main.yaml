---
- command: "ls {{ zuul_examples_dir }}"
  register: dir_out

- debug: var={{ zj_item }}
  loop: "{{ dir_out.stdout_lines }}"
  loop_control:
    loop_var: zj_item

- name: Initialize terraform
  ansible.builtin.command: "{{ terraform_executable }} init -no-color -input=false"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Terraform plan.out
  ansible.builtin.command: "{{ terraform_executable }} plan -out plan.out"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  environment:
    "{{ viz_env | default(omit) }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: convert plan to json
  include_tasks: jsonify.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Install npm
  ansible.builtin.package:
    name:
      - npm
    state: present
  become: yes

- name: Install terraform-visual/cli
  ansible.builtin.command: "npm install -g @terraform-visual/cli"
  become: yes

- name: Terraform make visualization
  ansible.builtin.command: "terraform-visual --plan plan.json"
  args:
    chdir: "{{ zuul_examples_dir }}/{{ zj_item }}"
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Process links in main index.html
  include_tasks: links.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item

- name: Initialize terraform for upload main page
  command: "{{ terraform_executable }} init -no-color -input=false"
  args:
    chdir: "{{ zuul_examples_dir }}/modules/obs_upload"

- name: Recursively find main page files
  ansible.builtin.find:
    paths: "{{ zuul_examples_dir }}/modules/main_page"
    recurse: yes
  register: found

- name: Get files
  set_fact:
    main_page: "{{ found.files | map(attribute='path') | join(',') }}"

- name: Terraform main page files to obs
  command: "{{ terraform_executable }} apply -auto-approve -var='bucket={{ bucket_name }}' -var='index_files={{ main_page }}'"
  args:
    chdir: "{{ zuul_examples_dir }}/modules/obs_upload"
  environment:
    OS_CLOUD: functest_cloud

- name: Upload visualize files
  include_tasks: upload.yaml
  loop: "{{ runtime_list.folders }}"
  loop_control:
    loop_var: zj_item
