---
- hosts: localhost
  tasks:
    - name: Fetch GitHub organization tokens
      no_log: true
      check_mode: false
      ansible.builtin.uri:
        url: "{{ vault.vault_addr }}/v1/{{ vault.vault_token_path }}"
        headers:
          "X-Vault-Token": "{{ vault.vault_token }}"
        method: "POST"
        body:
          permissions:
            administration: "{{ ansible_check_mode | ternary('read', 'write') }}"
            members: "{{ ansible_check_mode | ternary('read', 'write') }}"
            organization_administration: "{{ ansible_check_mode | ternary('read', 'write') }}"
          org_name: "{{ item }}"
        body_format: "json"
      register: "org_tokens"
      loop: "{{ gitcontrol_organizations }}"
      when:
        - "git_type == 'github'"

    - name: Fetch simple git api token
      no_log: true
      check_mode: false
      ansible.builtin.uri:
        url: "{{ vault.vault_addr }}/v1/{{ vault.vault_token_path }}"
        headers:
          "X-Vault-Token": "{{ vault.vault_token }}"
        method: "GET"
      register: "vault_response"
      when:
        - "git_type != 'github'"

    - name: Restructure Org token data
      no_log: true
      set_fact:
        orgs: "{{
          (orgs | default({})) |
          combine({
            item.item: {
              'token': item.json.data.token,
              'lease_id': item.json.lease_id
            }
          })
        }}"
      loop: "{{ org_tokens.results }}"
      loop_control:
        label: "{{ item.item }}"
      when:
        - "org_tokens is defined"
        - "item.json is defined"

    - name: Restructure plain token data
      no_log: true
      set_fact:
        orgs: "{{
          (orgs | default({})) |
          combine({
            item: {
              'token': vault_response.json.data.data.token,
              'lease_id': vault_response.json.lease_id
            }
          })
        }}"
      loop: "{{ gitcontrol_organizations }}"
      loop_control:
        label: "{{ item }}"
      when:
        - "vault_response is defined"
        - "vault_response.json is defined"

    - name: Apply configuration
      include_role:
        name: gitcontrol
      vars:
        organization: "{{ item.key }}"
        api_token: "{{ item.value.token }}"
      loop: "{{ orgs | dict2items }}"

    - name: Revoke token lease
      check_mode: false
      no_log: true
      uri:
        url: "{{ vault.vault_addr }}/v1/sys/leases/revoke"
        headers:
          "X-Vault-Token": "{{ vault.vault_token }}"
        method: "PUT"
        body:
          lease_id: "{{ item.value.lease_id }}"
        body_format: "json"
        status_code: 204
      loop: "{{ orgs | dict2items }}"
      when:
        - "item.value is defined"
        - "item.value.lease_id is defined"
        - "item.value.lease_id | length > 0"
